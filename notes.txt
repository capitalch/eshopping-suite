//important sql's
drop table temp1,temp2;
select c1.id, c1.label, c1.parent_id, sum(CASE WHEN c2.id is null then 0 else 1 end) as cat_count	
    into temp1
	from cats c1 left outer join cats c2 
    	on c1.id = c2.parent_id
        	group by c1.id
        		order by c1.id;

select t.id, t.label, t.parent_id, t.cat_count,
sum(CASE WHEN p.id is null then 0 else 1 end) as product_count into temp2
	from temp1 t left outer join product p
    	
    	on t.id = p.cat_id
        	group by t.id, t.label, t.parent_id, t.cat_count
        		order by t.id;
select id, t.label || ' (' || 
CASE WHEN t.cat_count = 0 then t.product_count else t.cat_count end

|| ')' as label, parent_id from temp2 t

//
select c1.id, c1.label, c1.parent_id, count(c1.id) as child_cnt
	from cats c1 left outer join cats c2
    	on c1.id = c2.parent_id
        	group by c1.id
        		order by c1.id
//
with cte2 as (
    with cte1 as (
        SELECT id, label, cast(nullif(NULL, '') AS int) as parent_id,
        COALESCE(parent_id,0) as id2
      FROM cats WHERE id in(
       SELECT id
       FROM cats
      --WHERE to_tsvector('english', label) @@ to_tsquery('english', '')
    ))
    select id,label,parent_id ,
      CASE min(id2)
          WHEN 0
              then 0
          ELSE
              count(id)
          END as cat_cnt
      from cte1 
          group by id,label,parent_id 
          order by id
  )
    select c2.id, label || ' (' || 
      CASE
      WHEN min(cat_cnt) = 0 
      then count(p.id)
      ELSE min(cat_cnt)
      end
      || ')' as label,parent_id, min(cat_cnt) as cat_cnt,  count(p.id) as product_cnt
      from cte2 c2
          left join product p
              on c2.id = p.cat_id
                  group by c2.id,label,parent_id
                    order by c2.id;
//
with cte2 as (
    with cte1 as (
      select c1.id,c1.label,c1.parent_id, 
        COALESCE(c2.id,0) as id2 
          from category c1 left join category c2 on c1.id = c2.parent_id
    )
    select id,label,parent_id ,
      CASE min(id2)
          WHEN 0
              then 0
          ELSE
              count(id)
          END as cat_cnt
      from cte1 
          group by id,label,parent_id 
          order by id
  )
    select c2.id, label || ' (' || 
      CASE
      WHEN min(cat_cnt) = 0 
      then count(p.id)
      ELSE min(cat_cnt)
      end
      || ')' as label,parent_id, min(cat_cnt) as cat_cnt,  count(p.id) as product_cnt
      from cte2 c2
          left join product p
              on c2.id = p.cat_id
                  group by c2.id,label,parent_id
                    order by c2.id;

npm install -ddd node-sass > npm.log 2> npm.err
https://stackoverflow.com/questions/38896091/installing-node-sass-stuck-on-install-js
//to do
1. Create product table with images
2. Convert mock_data to category
3. Connect category with product
4. Show leaf category with product count
5. On click leaf category show images of products in screen
6. Update the online project with latest output
7. cleanup online_test project

-- drop table temp;
-- select * into temp from mock_data
-- 	where id not in(select distinct parent_id from mock_data where parent_id is not null);
-- select * from temp;

-- SELECT *
-- FROM temp
-- -- WHERE Difficult = 'Easy' AND Category_id = 3
-- ORDER BY random()
-- LIMIT 1;

https://www.mockaroo.com/
//good angular 2 tree and many other libraries
https://libraries.io/explore/typescript-angular2-libraries?keywords=4%2CAngular+4%2Cangular+2%2Ctree%2Cangular-treeview%2Cangular+4&licenses=MIT%2CGPL-2.0&platforms=NPM
// Angular 2 tree
https://angular2-tree.readme.io/docs
//wijmo
http://demos.wijmo.com/5/Angular2/TreeViewIntro/TreeViewIntro/
//creating tree from scratch. good one
https://blog.imaginea.com/render-an-infinite-tree-in-angular-2/
//ngx-treeview good one
https://devarchy.com/angular/ngx-treeview
//JQWidgets
https://www.jqwidgets.com/angular/?gclid=EAIaIQobChMIqoGur-DH1wIVWB0rCh1_eww0EAMYASAAEgKZT_D_BwE
//ng2-tree
https://github.com/valor-software/ng2-tree#eyes-demo
//prime-ng
https://www.primefaces.org/primeng/#/tree